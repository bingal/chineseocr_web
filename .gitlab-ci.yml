variables:
  DOCKER_IMAGE: docker:latest
  VERSION: ORC.2022.01.26.RELEASE

stages:
  - build
  - dev-deploy
  - staging-deploy

#templte
.build-template:
  stage: build
  image: ${DOCKER_IMAGE}
  only:
    - master
  script:
    - docker build -t ${DOCKER_REGISTRY}/${PROJECT_NAME}:${VERSION} ${PROJECT_CORE_DIR}
    - docker push ${DOCKER_REGISTRY}/${PROJECT_NAME}:${VERSION}
    - docker tag ${DOCKER_REGISTRY}/${PROJECT_NAME}:${VERSION} ${DOCKER_REGISTRY}/${PROJECT_NAME}:latest
    - docker push ${DOCKER_REGISTRY}/${PROJECT_NAME}:latest
  tags:
    - docker-builder

.dev-deploy-template:
  stage: dev-deploy
  image: ${DOCKER_IMAGE}
  only:
    - master
  script:
    - docker stop ${PROJECT_NAME} && docker rm ${PROJECT_NAME}
    - docker run -d --net=host --name=${PROJECT_NAME} ${DOCKER_REGISTRY}/${PROJECT_NAME}:${VERSION}
  tags:
    - dev-deployer

#发布应用
.staging-deploy-template:
  image: registry.in-smart.cn/in-smart/kubectl:v1.22.1
  stage: staging-deploy
  before_script:
    - mkdir ~/.kube/
    - echo ${CLUSTER_CONFIG} |base64 -d > ~/.kube/config
  script:
    - kubectl rollout restart deployment $DEPLOYMENT -n $NAMESPACE
    - kubectl rollout status -w deployment $DEPLOYMENT -n $NAMESPACE
  tags:
    - StagingCluster
  only:
    - master
  when: on_success

orc-build:
  extends: .build-template
  variables:
    PROJECT_NAME: mp-media-ocr
    PROJECT_CORE_DIR: ./
  when: on_success
orc-dev-deploy:
  extends: .dev-deploy-template
  needs:
    - orc-build
  variables:
    PROJECT_NAME: mp-media-ocr
  when: on_success
orc-staging-deploy:
  extends: .staging-deploy-template
  needs:
    - orc-build
  variables:
    NAMESPACE: mp-media
    DEPLOYMENT: mp-media-ocr
  when: on_success